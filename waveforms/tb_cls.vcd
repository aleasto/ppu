$date
	Mon Dec 20 19:10:08 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_cls $end
$var wire 3 ! leading_zeros [2:0] $end
$var wire 3 " leading_ones [2:0] $end
$var wire 3 # index_highest_set_2 [2:0] $end
$var wire 3 $ index_highest_set_1 [2:0] $end
$var reg 8 % bits [7:0] $end
$scope module count_leading_ones $end
$var wire 8 & bits [7:0] $end
$var wire 3 ' leading_ones [2:0] $end
$var wire 3 ( index_highest_set [2:0] $end
$scope module highest_set_inst $end
$var wire 8 ) bits [7:0] $end
$var wire 3 * index [2:0] $end
$scope begin _gen[0] $end
$upscope $end
$scope begin _gen[1] $end
$upscope $end
$scope begin _gen[2] $end
$upscope $end
$scope begin _gen[3] $end
$upscope $end
$scope begin _gen[4] $end
$upscope $end
$scope begin _gen[5] $end
$upscope $end
$scope begin _gen[6] $end
$upscope $end
$scope begin _gen[7] $end
$upscope $end
$upscope $end
$upscope $end
$scope module count_leading_zeros $end
$var wire 8 + bits [7:0] $end
$var wire 3 , leading_ones [2:0] $end
$var wire 3 - index_highest_set [2:0] $end
$scope module highest_set_inst $end
$var wire 8 . bits [7:0] $end
$var wire 3 / index [2:0] $end
$scope begin _gen[0] $end
$upscope $end
$scope begin _gen[1] $end
$upscope $end
$scope begin _gen[2] $end
$upscope $end
$scope begin _gen[3] $end
$upscope $end
$scope begin _gen[4] $end
$upscope $end
$scope begin _gen[5] $end
$upscope $end
$scope begin _gen[6] $end
$upscope $end
$scope begin _gen[7] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 /
b11111110 .
b0 -
b111 ,
b11111110 +
b111 *
b1 )
b111 (
b0 '
b1 &
b1 %
b111 $
b0 #
b0 "
b111 !
$end
#10
b0 !
b0 ,
b1 "
b1 '
b111 #
b111 -
b111 /
b110 $
b110 (
b110 *
b1111100 +
b1111100 .
b10000011 %
b10000011 &
b10000011 )
#20
b10 "
b10 '
b101 $
b101 (
b101 *
b110111 +
b110111 .
b11001000 %
b11001000 &
b11001000 )
#30
b10 !
b10 ,
b0 "
b0 '
b101 #
b101 -
b101 /
b111 $
b111 (
b111 *
b11001111 +
b11001111 .
b110000 %
b110000 &
b110000 )
#40
b1 !
b1 ,
b110 #
b110 -
b110 /
b10101010 +
b10101010 .
b1010101 %
b1010101 &
b1010101 )
#50
b0 !
b0 ,
b10 "
b10 '
b111 #
b111 -
b111 /
b101 $
b101 (
b101 *
b111111 +
b111111 .
b11000000 %
b11000000 &
b11000000 )
#60
b111 "
b111 '
b0 $
b0 (
b0 *
b1 +
b1 .
b11111110 %
b11111110 &
b11111110 )
#70
