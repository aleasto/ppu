$date
	Thu Nov 25 12:36:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module p161_p160_tb $end
$var wire 16 ! p160 [15:0] $end
$var reg 16 " p161 [15:0] $end
$scope module p161_p160_inst $end
$var wire 16 # p161 [15:0] $end
$var wire 4 $ reg_length_w [3:0] $end
$var wire 16 % reg_bits_wo [15:0] $end
$var wire 7 & k_value_w [6:0] $end
$var reg 16 ' full_exp [15:0] $end
$var reg 16 ( p160 [15:0] $end
$var reg 15 ) reg_bits_w [14:0] $end
$scope module myger16 $end
$var wire 16 * f_exp [15:0] $end
$var reg 16 + regbits [15:0] $end
$scope begin _ $end
$var reg 16 , abs_f_exp [15:0] $end
$var reg 16 - built_reg [15:0] $end
$var reg 4 . low_exp [3:0] $end
$var reg 16 / reg_placeholder [15:0] $end
$var reg 16 0 shifted_reg [15:0] $end
$upscope $end
$upscope $end
$scope module myreg16 $end
$var wire 15 1 regbits [14:0] $end
$var reg 7 2 k_val [6:0] $end
$var reg 4 3 reg_length [3:0] $end
$upscope $end
$scope begin sv2v_autoblock_1 $end
$var reg 16 4 abs_posit [15:0] $end
$var reg 7 5 k_value [6:0] $end
$var reg 16 6 pos_content [15:0] $end
$var reg 16 7 pos_mant [15:0] $end
$var reg 1 8 pos_sign $end
$var reg 16 9 posit_body [15:0] $end
$var reg 4 : reg_length [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
x8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
b0 !
b0 (
b0 6
b0 %
b0 +
b0 -
b0 0
b111 .
b0 /
b101110111 ,
b101110111 '
b101110111 *
b101 :
b1111100 5
b101 $
b101 3
b1111100 &
b1111100 2
b0 7
b11000000000 )
b11000000000 1
b0 9
b11000000000 4
08
b11000000000 "
b11000000000 #
#11
b10000000001 )
b10000000001 1
b0 9
b10000000001 4
b10000000001 "
b10000000001 #
#21
b10000000011 )
b10000000011 1
b0 9
b10000000011 4
b10000000011 "
b10000000011 #
#31
b10000000000 )
b10000000000 1
b0 9
b10000000000 4
b10000000000 "
b10000000000 #
#41
b1000 .
b10001000 ,
b10001000 '
b10001000 *
b110 :
b100 5
b110 $
b110 3
b100 &
b100 2
b111110000000000 )
b111110000000000 1
b1000000000000000 9
b111110000000000 4
18
b1000010000000000 "
b1000010000000000 #
#51
b101 :
b11 5
b110 .
b10000110 ,
b101 $
b101 3
b11 &
b11 2
b10000110 '
b10000110 *
b111100000000000 )
b111100000000000 1
b1000000000000000 9
b111100000000000 4
08
b111100000000000 "
b111100000000000 #
#61
