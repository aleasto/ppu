$date
	Fri Dec  3 16:22:48 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 2 ! run_length_pacogen [1:0] $end
$var wire 2 " run_length_mine [1:0] $end
$var reg 4 # bits [3:0] $end
$var reg 1 $ diff $end
$scope module clo_inst $end
$var wire 4 % bits [3:0] $end
$var wire 2 & leading_ones [1:0] $end
$var wire 2 ' index_highest_set [1:0] $end
$scope module highest_set_inst $end
$var wire 4 ( bits [3:0] $end
$var wire 2 ) index [1:0] $end
$scope begin _gen[0] $end
$upscope $end
$scope begin _gen[1] $end
$upscope $end
$scope begin _gen[2] $end
$upscope $end
$scope begin _gen[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module lod_n_inst $end
$var wire 4 * in [3:0] $end
$var wire 1 + vld $end
$var wire 2 , out [1:0] $end
$scope module l1 $end
$var wire 4 - in [3:0] $end
$var wire 1 + vld $end
$var wire 2 . out [1:0] $end
$scope begin genblk4 $end
$var wire 1 / out_vl $end
$var wire 1 0 out_vh $end
$var wire 1 1 out_l $end
$var wire 1 2 out_h $end
$scope module h $end
$var wire 2 3 in [1:0] $end
$var wire 1 0 vld $end
$var wire 1 2 out $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module l $end
$var wire 2 4 in [1:0] $end
$var wire 1 / vld $end
$var wire 1 1 out $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 4
b0 3
02
11
00
1/
b11 .
b1 -
b11 ,
1+
b1 *
b0 )
b1110 (
b0 '
b11 &
b1110 %
0$
b1110 #
b11 "
b11 !
$end
#10
b10 "
b10 &
0$
b1 '
b1 )
b10 !
b10 ,
b10 .
01
b11 4
b11 *
b11 -
b1100 #
b1100 %
b1100 (
#20
b1 "
b1 &
b10 '
b10 )
12
0$
b1 !
b1 ,
b1 .
10
b1 3
b111 *
b111 -
b1000 #
b1000 %
b1000 (
#30
b0 !
b0 ,
b0 .
0$
02
b0 "
b0 &
b11 '
b11 )
b11 3
b1111 *
b1111 -
b0 #
b0 %
b0 (
#40
11
b1 4
b10 3
b1001 *
b1001 -
b110 #
b110 %
b110 (
#50
01
b10 4
b11 3
b1110 *
b1110 -
b1 #
b1 %
b1 (
#60
11
b1 4
b1101 *
b1101 -
b10 #
b10 %
b10 (
#70
