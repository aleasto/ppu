# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:3

pipelines:
  default:

    - step:
        name: 'Build ppu_top.v'
        deployment: staging
        script:
          - echo "Changing to new non-root user"
          - useradd -rm -d /home/builder -s /bin/bash -g root -G sudo -u 1001 builder
          - apt update
          - apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl git unzip
          - su builder
          - git clone https://github.com/pyenv/pyenv.git ~/.pyenv
          - echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
          - echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
          - echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n eval "$(pyenv init --path)"\nfi' >> ~/.bashrc
          - source ~/.bashrc
          - pyenv install 3.10.0
          - pyenv global 3.10.0
          - pip install maturin
          - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          - source /home/builder/.cargo/env


 

          

    - step:
        name: 'Deployment to Production'
        deployment: production
        trigger: 'manual'
        script:
          - echo "Your deployment to production script goes here..."
